BestRule is: 
mate2J(BK,WK,WR) -: [~Edge(WK), Adjacent(WK,WR), Corner(BK), ~Diagonal(BK,WK), ~Adjacent(BK,WR)]
mate2J(0, 0, 1, 2, 0, 2) mate2J(0, 0, 1, 2, 0, 3) mate2J(0, 0, 1, 2, 1, 3) mate2J(0, 0, 1, 2, 2, 1) mate2J(0, 0, 1, 2, 2, 2) mate2J(0, 0, 1, 2, 2, 3) mate2J(0, 0, 2, 1, 1, 2) mate2J(0, 0, 2, 1, 2, 0) mate2J(0, 0, 2, 1, 2, 2) mate2J(0, 0, 2, 1, 3, 0) mate2J(0, 0, 2, 1, 3, 1) mate2J(0, 0, 2, 1, 3, 2) mate2J(0, 3, 1, 1, 0, 0) mate2J(0, 3, 1, 1, 0, 1) mate2J(0, 3, 1, 1, 1, 0) mate2J(0, 3, 1, 1, 2, 0) mate2J(0, 3, 1, 1, 2, 1) mate2J(0, 3, 1, 1, 2, 2) mate2J(0, 3, 2, 2, 1, 1) mate2J(0, 3, 2, 2, 2, 1) mate2J(0, 3, 2, 2, 2, 3) mate2J(0, 3, 2, 2, 3, 1) mate2J(0, 3, 2, 2, 3, 2) mate2J(0, 3, 2, 2, 3, 3) mate2J(3, 0, 1, 1, 0, 0) mate2J(3, 0, 1, 1, 0, 1) mate2J(3, 0, 1, 1, 0, 2) mate2J(3, 0, 1, 1, 1, 0) mate2J(3, 0, 1, 1, 1, 2) mate2J(3, 0, 1, 1, 2, 2) mate2J(3, 0, 2, 2, 1, 1) mate2J(3, 0, 2, 2, 1, 2) mate2J(3, 0, 2, 2, 1, 3) mate2J(3, 0, 2, 2, 2, 3) mate2J(3, 0, 2, 2, 3, 2) mate2J(3, 0, 2, 2, 3, 3) mate2J(3, 3, 1, 2, 0, 1) mate2J(3, 3, 1, 2, 0, 2) mate2J(3, 3, 1, 2, 0, 3) mate2J(3, 3, 1, 2, 1, 1) mate2J(3, 3, 1, 2, 1, 3) mate2J(3, 3, 1, 2, 2, 1) mate2J(3, 3, 2, 1, 1, 0) mate2J(3, 3, 2, 1, 1, 1) mate2J(3, 3, 2, 1, 1, 2) mate2J(3, 3, 2, 1, 2, 0) mate2J(3, 3, 2, 1, 3, 0) mate2J(3, 3, 2, 1, 3, 1) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), ~Adjacent(BK,WR), Diagonal(BK,WR), ~Corner(BK)]
mate2J(0, 1, 2, 1, 2, 3) mate2J(0, 1, 2, 2, 2, 3) mate2J(0, 2, 2, 1, 2, 0) mate2J(0, 2, 2, 2, 2, 0) mate2J(1, 0, 1, 2, 3, 2) mate2J(1, 0, 2, 2, 3, 2) mate2J(1, 3, 1, 1, 3, 1) mate2J(1, 3, 2, 1, 3, 1) mate2J(2, 0, 1, 2, 0, 2) mate2J(2, 0, 2, 2, 0, 2) mate2J(2, 3, 1, 1, 0, 1) mate2J(2, 3, 2, 1, 0, 1) mate2J(3, 1, 1, 1, 1, 3) mate2J(3, 1, 1, 2, 1, 3) mate2J(3, 2, 1, 1, 1, 0) mate2J(3, 2, 1, 2, 1, 0) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), Corner(WR), Adjacent(WK,WR)]
mate2J(0, 0, 2, 2, 3, 3) mate2J(0, 1, 2, 1, 3, 0) mate2J(0, 1, 2, 2, 3, 3) mate2J(0, 2, 2, 1, 3, 0) mate2J(0, 2, 2, 2, 3, 3) mate2J(0, 3, 2, 1, 3, 0) mate2J(1, 0, 1, 2, 0, 3) mate2J(1, 0, 2, 2, 3, 3) mate2J(1, 3, 1, 1, 0, 0) mate2J(1, 3, 2, 1, 3, 0) mate2J(2, 0, 1, 2, 0, 3) mate2J(2, 0, 2, 2, 3, 3) mate2J(2, 3, 1, 1, 0, 0) mate2J(2, 3, 2, 1, 3, 0) mate2J(3, 0, 1, 2, 0, 3) mate2J(3, 1, 1, 1, 0, 0) mate2J(3, 1, 1, 2, 0, 3) mate2J(3, 2, 1, 1, 0, 0) mate2J(3, 2, 1, 2, 0, 3) mate2J(3, 3, 1, 1, 0, 0) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), ~Diagonal(BK,WR), Diagonal(BK,WK), ~Diagonal(WK,WR), ~Adjacent(BK,WR), ~Adjacent(WK,WR)]
mate2J(0, 0, 2, 2, 0, 2) mate2J(0, 0, 2, 2, 0, 3) mate2J(0, 0, 2, 2, 2, 0) mate2J(0, 0, 2, 2, 3, 0) mate2J(0, 3, 2, 1, 0, 0) mate2J(0, 3, 2, 1, 0, 1) mate2J(0, 3, 2, 1, 2, 3) mate2J(0, 3, 2, 1, 3, 3) mate2J(3, 0, 1, 2, 0, 0) mate2J(3, 0, 1, 2, 1, 0) mate2J(3, 0, 1, 2, 3, 2) mate2J(3, 0, 1, 2, 3, 3) mate2J(3, 3, 1, 1, 0, 3) mate2J(3, 3, 1, 1, 1, 3) mate2J(3, 3, 1, 1, 3, 0) mate2J(3, 3, 1, 1, 3, 1) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), ~Diagonal(BK,WR), Adjacent(WK,WR), Adjacent(BK,WR), Corner(BK)]
mate2J(0, 0, 1, 2, 0, 1) mate2J(0, 0, 2, 1, 1, 0) mate2J(0, 3, 1, 1, 0, 2) mate2J(0, 3, 2, 2, 1, 3) mate2J(3, 0, 1, 1, 2, 0) mate2J(3, 0, 2, 2, 3, 1) mate2J(3, 3, 1, 2, 2, 3) mate2J(3, 3, 2, 1, 3, 2) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), ~Corner(BK), ~Diagonal(WK,WR), InCheck(*), Equal(WKR,WRR), Adjacent(BK,WR)]
mate2J(1, 0, 1, 2, 1, 1) mate2J(1, 0, 2, 2, 2, 0) mate2J(1, 3, 1, 1, 1, 2) mate2J(1, 3, 2, 1, 2, 3) mate2J(2, 0, 1, 2, 1, 0) mate2J(2, 0, 2, 2, 2, 1) mate2J(2, 3, 1, 1, 1, 3) mate2J(2, 3, 2, 1, 2, 2) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), ~Corner(BK), ~Adjacent(BK,WR), Corner(WR), ~Diagonal(WK,WR), InCheck(*)]
mate2J(0, 1, 2, 2, 0, 3) mate2J(0, 2, 2, 1, 0, 0) mate2J(1, 0, 2, 2, 3, 0) mate2J(1, 3, 2, 1, 3, 3) mate2J(2, 0, 1, 2, 0, 0) mate2J(2, 3, 1, 1, 0, 3) mate2J(3, 1, 1, 2, 3, 3) mate2J(3, 2, 1, 1, 3, 0) BestRule is: 
mate2J(BK,WK,WR) -: ...[Corner(BK), ~Edge(WR), ~Diagonal(BK,WR), ~Adjacent(WK,WR), ~Diagonal(BK,WK)]
mate2J(0, 0, 0, 2, 2, 1) mate2J(0, 0, 0, 3, 2, 1) mate2J(0, 0, 1, 3, 2, 1) mate2J(0, 0, 2, 0, 1, 2) mate2J(0, 0, 2, 3, 2, 1) mate2J(0, 0, 3, 0, 1, 2) mate2J(0, 0, 3, 1, 1, 2) mate2J(0, 0, 3, 2, 1, 2) mate2J(0, 3, 0, 0, 2, 2) mate2J(0, 3, 0, 1, 2, 2) mate2J(0, 3, 1, 0, 2, 2) mate2J(0, 3, 2, 0, 2, 2) mate2J(0, 3, 2, 3, 1, 1) mate2J(0, 3, 3, 1, 1, 1) mate2J(0, 3, 3, 2, 1, 1) mate2J(0, 3, 3, 3, 1, 1) mate2J(3, 0, 0, 0, 2, 2) mate2J(3, 0, 0, 1, 2, 2) mate2J(3, 0, 0, 2, 2, 2) mate2J(3, 0, 1, 0, 2, 2) mate2J(3, 0, 1, 3, 1, 1) mate2J(3, 0, 2, 3, 1, 1) mate2J(3, 0, 3, 2, 1, 1) mate2J(3, 0, 3, 3, 1, 1) mate2J(3, 3, 0, 1, 2, 1) mate2J(3, 3, 0, 2, 2, 1) mate2J(3, 3, 0, 3, 2, 1) mate2J(3, 3, 1, 0, 1, 2) mate2J(3, 3, 1, 3, 2, 1) mate2J(3, 3, 2, 0, 1, 2) mate2J(3, 3, 3, 0, 1, 2) mate2J(3, 3, 3, 1, 1, 2) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), Equal(BKC,WKC), Equal(BKC,WRC), ~Equal(BKR,WRR)]
mate2J(0, 1, 2, 1, 1, 1) mate2J(0, 1, 2, 1, 3, 1) mate2J(0, 2, 2, 2, 1, 2) mate2J(0, 2, 2, 2, 3, 2) mate2J(3, 1, 1, 1, 0, 1) mate2J(3, 1, 1, 1, 2, 1) mate2J(3, 2, 1, 2, 0, 2) mate2J(3, 2, 1, 2, 2, 2) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), ~Equal(BKC,WRC), ~Diagonal(BK,WR), ~InCheck(*), Equal(BKR,WKR), ~Adjacent(WK,WR)]
mate2J(1, 0, 1, 2, 3, 1) mate2J(1, 0, 1, 2, 3, 3) mate2J(1, 3, 1, 1, 3, 0) mate2J(1, 3, 1, 1, 3, 2) mate2J(2, 0, 2, 2, 0, 1) mate2J(2, 0, 2, 2, 0, 3) mate2J(2, 3, 2, 1, 0, 0) mate2J(2, 3, 2, 1, 0, 2) BestRule is: 
mate2J(BK,WK,WR) -: ...[Corner(BK), ~InCheck(*), ~Corner(WK), Equal(BKR,WKR), ~Adjacent(WK,WR), Equal(WKC,WRC)]
mate2J(0, 0, 0, 2, 2, 2) mate2J(0, 0, 0, 2, 3, 2) mate2J(0, 3, 0, 1, 2, 1) mate2J(0, 3, 0, 1, 3, 1) mate2J(3, 0, 3, 2, 0, 2) mate2J(3, 0, 3, 2, 1, 2) mate2J(3, 3, 3, 1, 0, 1) mate2J(3, 3, 3, 1, 1, 1) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), ~Equal(BKC,WRC), ~Diagonal(BK,WR), ~InCheck(*), Equal(BKR,WRR)]
mate2J(1, 0, 1, 2, 1, 3) mate2J(1, 3, 1, 1, 1, 0) mate2J(2, 0, 2, 2, 2, 3) mate2J(2, 3, 2, 1, 2, 0) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), ~Equal(BKC,WRC), ~Diagonal(BK,WR), ~Equal(BKR,WRR), ~Edge(WR), Corner(BK)]
mate2J(0, 0, 2, 2, 1, 2) mate2J(0, 0, 2, 2, 2, 1) mate2J(0, 3, 2, 1, 1, 1) mate2J(0, 3, 2, 1, 2, 2) mate2J(3, 0, 1, 2, 1, 1) mate2J(3, 0, 1, 2, 2, 2) mate2J(3, 3, 1, 1, 1, 2) mate2J(3, 3, 1, 1, 2, 1) BestRule is: 
mate2J(BK,WK,WR) -: ...[Equal(BKC,WKC), Corner(BK), ~Corner(WK), ~Equal(BKR,WRR), ~Adjacent(WK,WR), Equal(WKR,WRR)]
mate2J(0, 0, 2, 0, 2, 2) mate2J(0, 0, 2, 0, 2, 3) mate2J(0, 3, 2, 3, 2, 0) mate2J(0, 3, 2, 3, 2, 1) mate2J(3, 0, 1, 0, 1, 2) mate2J(3, 0, 1, 0, 1, 3) mate2J(3, 3, 1, 3, 1, 0) mate2J(3, 3, 1, 3, 1, 1) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), ~Corner(BK), ~Equal(BKC,WRC), Edge(WR), ~Diagonal(BK,WR), ~Equal(WKR,WRR), ~Equal(BKR,WRR), ~Equal(WKC,WRC), Equal(BKC,WKC), ~Adjacent(WK,WR)]
mate2J(0, 1, 2, 1, 1, 3) mate2J(0, 1, 2, 1, 3, 3) mate2J(0, 2, 2, 2, 1, 0) mate2J(0, 2, 2, 2, 3, 0) mate2J(3, 1, 1, 1, 0, 3) mate2J(3, 1, 1, 1, 2, 3) mate2J(3, 2, 1, 2, 0, 0) mate2J(3, 2, 1, 2, 2, 0) BestRule is: 
mate2J(BK,WK,WR) -: ...[Corner(BK), Corner(WR), Adjacent(WK,WR), Equal(BKR,WKR)]
mate2J(0, 0, 0, 2, 0, 3) mate2J(0, 3, 0, 1, 0, 0) mate2J(3, 0, 3, 2, 3, 3) mate2J(3, 3, 3, 1, 3, 0) BestRule is: 
mate2J(BK,WK,WR) -: ...[Corner(BK), Equal(BKC,WKC), ~Corner(WK), Corner(WR), ~Equal(BKR,WRR)]
mate2J(0, 0, 2, 0, 3, 0) mate2J(0, 0, 2, 0, 3, 3) mate2J(0, 3, 2, 3, 3, 0) mate2J(0, 3, 2, 3, 3, 3) mate2J(3, 0, 1, 0, 0, 0) mate2J(3, 0, 1, 0, 0, 3) mate2J(3, 3, 1, 3, 0, 0) mate2J(3, 3, 1, 3, 0, 3) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), ~Corner(BK), Diagonal(WK,WR), ~Adjacent(BK,WR), ~InCheck(*), ~Equal(BKR,WKR), ~Equal(BKC,WKC)]
mate2J(0, 1, 2, 2, 1, 3) mate2J(0, 2, 2, 1, 1, 0) mate2J(1, 0, 2, 2, 3, 1) mate2J(1, 3, 2, 1, 3, 2) mate2J(2, 0, 1, 2, 0, 1) mate2J(2, 3, 1, 1, 0, 2) mate2J(3, 1, 1, 2, 2, 3) mate2J(3, 2, 1, 1, 2, 0) BestRule is: 
mate2J(BK,WK,WR) -: ...[Corner(BK), Equal(BKR,WKR), ~Corner(WK), Diagonal(BK,WR), Corner(WR)]
mate2J(0, 0, 0, 2, 3, 3) mate2J(0, 3, 0, 1, 3, 0) mate2J(3, 0, 3, 2, 0, 3) mate2J(3, 3, 3, 1, 0, 0) BestRule is: 
mate2J(BK,WK,WR) -: ...[Corner(BK), Equal(BKR,WKR), ~Corner(WK), ~Equal(BKC,WRC), ~Adjacent(WK,WR)]
mate2J(0, 0, 0, 2, 2, 3) mate2J(0, 3, 0, 1, 2, 0) mate2J(3, 0, 3, 2, 1, 3) mate2J(3, 3, 3, 1, 1, 0) BestRule is: 
mate2J(BK,WK,WR) -: ...[~Edge(WK), Equal(WKC,WRC), InCheck(*), ~Corner(BK), Edge(WR)]
mate2J(0, 1, 2, 2, 0, 2) mate2J(0, 2, 2, 1, 0, 1) mate2J(3, 1, 1, 2, 3, 2) mate2J(3, 2, 1, 1, 3, 1) BestRule is: 
mate2J(BK,WK,WR) -: ...[Equal(BKC,WKC), Corner(BK), ~Corner(WK), ~Equal(BKR,WRR), ~Adjacent(WK,WR)]
mate2J(0, 0, 2, 0, 3, 2) mate2J(0, 3, 2, 3, 3, 1) mate2J(3, 0, 1, 0, 0, 2) mate2J(3, 3, 1, 3, 0, 1) BestRule is: 
mate2J(BK,WK,WR) -: [~Edge(WK), Adjacent(WK,WR), Corner(BK), ~Diagonal(BK,WK), ~Adjacent(BK,WR)]
                    [~Edge(WK), ~Adjacent(BK,WR), Diagonal(BK,WR), ~Corner(BK)]
                    [~Edge(WK), Corner(WR), Adjacent(WK,WR)]
                    [~Edge(WK), ~Diagonal(BK,WR), Diagonal(BK,WK), ~Diagonal(WK,WR), ~Adjacent(BK,WR), ~Adjacent(WK,WR)]
                    [~Edge(WK), ~Diagonal(BK,WR), Adjacent(WK,WR), Adjacent(BK,WR), Corner(BK)]
                    [~Edge(WK), ~Corner(BK), ~Diagonal(WK,WR), InCheck(*), Equal(WKR,WRR), Adjacent(BK,WR)]
                    [~Edge(WK), ~Corner(BK), ~Adjacent(BK,WR), Corner(WR), ~Diagonal(WK,WR), InCheck(*)]
                    [Corner(BK), ~Edge(WR), ~Diagonal(BK,WR), ~Adjacent(WK,WR), ~Diagonal(BK,WK)]
                    [~Edge(WK), Equal(BKC,WKC), Equal(BKC,WRC), ~Equal(BKR,WRR)]
                    [~Edge(WK), ~Equal(BKC,WRC), ~Diagonal(BK,WR), ~InCheck(*), Equal(BKR,WKR), ~Adjacent(WK,WR)]
                    [Corner(BK), ~InCheck(*), ~Corner(WK), Equal(BKR,WKR), ~Adjacent(WK,WR), Equal(WKC,WRC)]
                    [~Edge(WK), ~Equal(BKC,WRC), ~Diagonal(BK,WR), ~InCheck(*), Equal(BKR,WRR)]
                    [~Edge(WK), ~Equal(BKC,WRC), ~Diagonal(BK,WR), ~Equal(BKR,WRR), ~Edge(WR), Corner(BK)]
                    [Equal(BKC,WKC), Corner(BK), ~Corner(WK), ~Equal(BKR,WRR), ~Adjacent(WK,WR), Equal(WKR,WRR)]
                    [~Edge(WK), ~Corner(BK), ~Equal(BKC,WRC), Edge(WR), ~Diagonal(BK,WR), ~Equal(WKR,WRR), ~Equal(BKR,WRR), ~Equal(WKC,WRC), Equal(BKC,WKC), ~Adjacent(WK,WR)]
                    [Corner(BK), Corner(WR), Adjacent(WK,WR), Equal(BKR,WKR)]
                    [Corner(BK), Equal(BKC,WKC), ~Corner(WK), Corner(WR), ~Equal(BKR,WRR)]
                    [~Edge(WK), ~Corner(BK), Diagonal(WK,WR), ~Adjacent(BK,WR), ~InCheck(*), ~Equal(BKR,WKR), ~Equal(BKC,WKC)]
                    [Corner(BK), Equal(BKR,WKR), ~Corner(WK), Diagonal(BK,WR), Corner(WR)]
                    [Corner(BK), Equal(BKR,WKR), ~Corner(WK), ~Equal(BKC,WRC), ~Adjacent(WK,WR)]
                    [~Edge(WK), Equal(WKC,WRC), InCheck(*), ~Corner(BK), Edge(WR)]
                    [Equal(BKC,WKC), Corner(BK), ~Corner(WK), ~Equal(BKR,WRR), ~Adjacent(WK,WR)]
